name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'

    - name: Get dependencies
      run: flutter pub get

    - name: Verify formatting
      run: flutter format --output=none --set-exit-if-changed .

    - name: Analyze project source
      run: flutter analyze

    - name: Run tests
      run: flutter test --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info

  build-web:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'

    - name: Get dependencies
      run: flutter pub get

    - name: Build web app
      run: flutter build web --release --web-renderer html

    - name: Upload web build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: build/web/

  build-android:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'

    - name: Get dependencies
      run: flutter pub get

    - name: Build APK
      run: flutter build apk --release

    - name: Upload APK artifacts
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk

  deploy-web:
    needs: build-web
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download web build artifacts
      uses: actions/download-artifact@v3
      with:
        name: web-build
        path: build/web/

    # Deploy to Firebase Hosting (uncomment and configure)
    # - name: Deploy to Firebase Hosting
    #   uses: FirebaseExtended/action-hosting-deploy@v0
    #   with:
    #     repoToken: '${{ secrets.GITHUB_TOKEN }}'
    #     firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
    #     channelId: live
    #     projectId: your-firebase-project-id

    # Deploy to GitHub Pages (uncomment and configure)
    # - name: Deploy to GitHub Pages
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: build/web

    # Deploy to Netlify (uncomment and configure)
    # - name: Deploy to Netlify
    #   uses: nwtgck/actions-netlify@v2.0
    #   with:
    #     publish-dir: build/web
    #     production-branch: main
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     deploy-message: "Deploy from GitHub Actions"
    #   env:
    #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    # Deploy to Vercel (uncomment and configure)
    # - name: Deploy to Vercel
    #   uses: amondnet/vercel-action@v25
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.ORG_ID }}
    #     vercel-project-id: ${{ secrets.PROJECT_ID }}
    #     working-directory: build/web

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'